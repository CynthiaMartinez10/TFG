import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import linregress


plt.rcParams['text.usetex'] = True

# Leer los datos
archivo = "d13.txt"  # Ruta del archivo
datos = pd.read_csv(archivo, sep='\s+', header=None, names=['X', 'Y'])


# Seleccionar los datos para graficar
h = datos.iloc[[2, 4, 5, 7]]  # Hidrógeno
o = datos.iloc[[0, 6, 8, 9]]  # Oxígeno
ne = datos.iloc[[1, 3]]  # Neón
etiqueta = [r'$H_{8}$', r'$H_{\delta}$', r'$H_{\gamma}$', r'$H_{\beta}$']
eti_o=[r'$[O II]$', r'$O III$', r'$[O III]$', r'$[O III]$']
eti_ne=[r'$[Ne III]$', r'$[Ne III]$']

# Graficar los puntos
plt.scatter(datos['X'], datos['Y'], color='violet', label='Datos imagen')

# Ajuste de regresión lineal y cálculo del error estándar de la pendiente
slope_datos, intercept_datos, _, _, std_err_datos = linregress(datos['X'], datos['Y'])
# Ajuste de regresión lineal
coef = np.polyfit(datos['X'], datos['Y'], 1)  # Ajuste con todos los datos
x_vals = np.linspace(datos['X'].min(), datos['X'].max(), 100)
plt.plot(x_vals, np.poly1d(coef)(x_vals), '--', color='darkviolet', label=f'(z+1={slope_datos:.4f} ± {std_err_datos:.4f})')

# Agregar etiquetas a los puntos de hidrógeno
for i in range(len(h)):
    plt.text(h['X'].iloc[i] , h['Y'].iloc[i] - 900, etiqueta[i], fontsize=22)

#Agrega etiquetas a los puntos del oxigeno de manera individual para que quede mejor visualmente:

plt.text(o['X'].iloc[3] - 50, o['Y'].iloc[3] + 350, eti_o[3], fontsize=16)
plt.text(o['X'].iloc[2] - 100, o['Y'].iloc[2] + 100, eti_o[2], fontsize=16)
plt.text(o['X'].iloc[1] - 80, o['Y'].iloc[1] + 80, eti_o[1], fontsize=16)
plt.text(o['X'].iloc[0] - 80, o['Y'].iloc[0] + 80, eti_o[0], fontsize=16)

#Agrega etiquetas a los puntos del neón
for i in range(len(ne)):
    plt.text(ne['X'].iloc[i] - 120, ne['Y'].iloc[i] + 150, eti_ne[i], fontsize=18)




# Ajustes finales
plt.xlim(3600, None)
plt.ylim(None,48800)
plt.xticks(fontsize=22)
plt.yticks(fontsize=22)
plt.xlabel(r'$\lambda_0 \, (\mathrm{\AA})$', fontsize=24)
plt.ylabel(r'$\lambda \,(\mathrm{\AA})$', fontsize=24)
plt.legend(fontsize=20)

# Mostrar la gráfica
plt.show()
